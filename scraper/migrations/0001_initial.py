# Generated by Django 4.1.6 on 2023-02-21 18:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Attraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="attraction name", max_length=100)),
                (
                    "description",
                    models.TextField(blank=True, help_text="attraction description"),
                ),
                (
                    "location",
                    models.CharField(help_text="attraction location", max_length=100),
                ),
                ("source_url", models.URLField(blank=True, help_text="attraction url")),
                ("c_dt", models.DateTimeField(help_text="datetime created")),
                (
                    "m_dt",
                    models.DateTimeField(
                        auto_now_add=True, help_text="datetime modified"
                    ),
                ),
                ("is_active", models.BooleanField(help_text="usage in app")),
            ],
            options={
                "db_table": "attraction",
            },
        ),
        migrations.CreateModel(
            name="MapLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="search result name", max_length=100),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="search result description"),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True, help_text="location address if exists"
                    ),
                ),
                (
                    "gmap_id",
                    models.CharField(help_text="google map id", max_length=100),
                ),
                ("source_url", models.URLField(blank=True, help_text="google map url")),
                (
                    "long",
                    models.DecimalField(
                        decimal_places=6, help_text="result longitude", max_digits=9
                    ),
                ),
                (
                    "lat",
                    models.DecimalField(
                        decimal_places=6, help_text="result latitude", max_digits=9
                    ),
                ),
                ("c_dt", models.DateTimeField(help_text="datetime created")),
                (
                    "m_dt",
                    models.DateTimeField(
                        auto_now_add=True, help_text="datetime modified"
                    ),
                ),
                ("is_active", models.BooleanField(help_text="usage in app")),
                (
                    "search_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="map_result",
                        to="scraper.attraction",
                    ),
                ),
            ],
            options={
                "db_table": "map_location",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reviewer_id",
                    models.CharField(help_text="reviewer id", max_length=100),
                ),
                (
                    "reviewer_name",
                    models.CharField(help_text="reviewer name", max_length=100),
                ),
                (
                    "reviewer_level",
                    models.CharField(help_text="reviewer level", max_length=10),
                ),
                ("reviewer_url", models.URLField(blank=True, help_text="reviewer url")),
                (
                    "reviewer_comment_count",
                    models.IntegerField(blank=True, help_text="reviewer comment count"),
                ),
                (
                    "comment_id",
                    models.CharField(help_text="comment id", max_length=100),
                ),
                ("comment", models.TextField(blank=True, help_text="comment text")),
                ("comment_dt", models.DateTimeField(help_text="comment datetime")),
                (
                    "is_local_guide",
                    models.BooleanField(help_text="reviewer is a local guide or not"),
                ),
                ("is_active", models.BooleanField(help_text="usage in app")),
                ("c_dt", models.DateTimeField(help_text="datetime created")),
                (
                    "m_dt",
                    models.DateTimeField(
                        auto_now_add=True, help_text="datetime modified"
                    ),
                ),
                (
                    "map_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="scraper.maplocation",
                    ),
                ),
            ],
            options={
                "db_table": "review",
            },
        ),
    ]
